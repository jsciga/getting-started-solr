This diagram illustrates the two main data flows in the application.

============================================================
FLOW 1: Direct Interaction with Solr (e.g., for queries)
============================================================

The client communicates directly with an endpoint that uses the Solr repository.
This path is typically used for synchronous operations like searching or direct writes.


   [Client]  (e.g., Web Browser, curl)
      |
      |  HTTP Request (GET, POST, PUT, DELETE to /books/...)
      v
+---------------------------------+
|         BookResource            |
| (JAX-RS REST Endpoint)          |
+---------------------------------+
      |
      |  Calls repository methods (e.g., findByTitle(), save())
      v
+---------------------------------+
|         BookRepository          |
| (Eclipse JNoSQL Data Interface) |
+---------------------------------+
      |
      |  Executes commands against the Solr core
      v
+---------------------------------+
|           Apache Solr           |
|          (Data Store)           |
+---------------------------------+



==================================================================
FLOW 2: Redis-Driven Interaction (e.g., for asynchronous writes)
==================================================================

The client sends a write request to a Redis-specific endpoint. A message with the
book data is published to a Redis channel. A background service then updates Solr.


   [Client]  (e.g., Web Browser, curl)
      |
      |  HTTP Request (POST, PUT to /redis-books/...)
      v
+---------------------------------+
|       RedisBookResource         |
| (JAX-RS REST Endpoint)          |
+---------------------------------+
      |
      |  Calls the Redis service
      v
+---------------------------------+
|        BookRedisService         |
+---------------------------------+
      |
      |  Publishes the book object to a Redis Channel ("book-updates").
      v
+---------------------------------+
|              Redis              |
|           (Pub/Sub)             |
+---------------------------------+
      |
      | Message is broadcasted via the "book-updates" channel.
      v
+---------------------------------+
|      BookSubscriberService      |
| (Background listener)           |
+---------------------------------+
      |
      | 1. Receives the book from the channel.
      | 2. Calls the BookRepository to persist the change.
      v
+---------------------------------+
|         BookRepository          |
+---------------------------------+
      |
      |  Saves/updates the document in Solr.
      v
+---------------------------------+
|           Apache Solr           |
|          (Data Store)           |
+---------------------------------+